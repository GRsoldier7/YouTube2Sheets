{
  "total_checks": 43,
  "passed": 42,
  "critical_issues": 0,
  "high_issues": 0,
  "medium_issues": 0,
  "warnings": 1,
  "issues": [],
  "warnings_list": [
    {
      "category": "API",
      "description": "YouTube service may not use deduplication",
      "location": "src\\services\\youtube_service.py"
    }
  ],
  "successes": [
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/youtube2sheets.py exists (Main orchestrator)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/scheduler_sheet_manager.py exists (Job management)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/scheduler_runner.py exists (CLI entry for scheduled jobs)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/api_optimizer.py exists (API efficiency + quota tracking)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/data_processor.py exists (Video transformation pipeline)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/filters.py exists (Keyword & duration filters)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/backend/exceptions.py exists (Canonical error hierarchy)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/gui/main_app.py exists (CustomTkinter GUI entry point)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/services/automator.py exists (Services layer automator)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/services/youtube_service.py exists (YouTube API service)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/services/sheets_service.py exists (Google Sheets service)"
    },
    {
      "category": "Architecture",
      "description": "\u2705 src/domain/models.py exists (Domain models)"
    },
    {
      "category": "Automator",
      "description": "\u2705 GUI correctly imports backend automator"
    },
    {
      "category": "Automator",
      "description": "\u2705 GUI uses SyncConfig"
    },
    {
      "category": "API",
      "description": "\u2705 ResponseCache exists (ETag caching implementation)"
    },
    {
      "category": "API",
      "description": "\u2705 VideoDeduplicator exists (Deduplication logic)"
    },
    {
      "category": "API",
      "description": "\u2705 APICreditTracker exists (Quota tracking)"
    },
    {
      "category": "API",
      "description": "\u2705 YouTube service uses caching"
    },
    {
      "category": "Filters",
      "description": "\u2705 Filter method exists"
    },
    {
      "category": "Filters",
      "description": "\u2705 Duration filter logic is correct"
    },
    {
      "category": "Sheets",
      "description": "\u2705 create_sheet_tab exists (Tab creation)"
    },
    {
      "category": "Sheets",
      "description": "\u2705 write_videos_to_sheet exists (Data writing)"
    },
    {
      "category": "Sheets",
      "description": "\u2705 apply_conditional_formatting exists (Conditional formatting)"
    },
    {
      "category": "Sheets",
      "description": "\u2705 check_for_duplicates exists (Deduplication check)"
    },
    {
      "category": "Sheets",
      "description": "\u2705 Automator creates tabs before writing"
    },
    {
      "category": "Video",
      "description": "\u2705 Uses modern forHandle for channel resolution"
    },
    {
      "category": "Video",
      "description": "\u2705 Fetches full video details (duration, views, likes, comments)"
    },
    {
      "category": "Video",
      "description": "\u2705 Duration parsing method exists"
    },
    {
      "category": "Models",
      "description": "\u2705 Video model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 Channel model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 Filters model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 Destination model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 RunConfig model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 RunResult model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 RunStatus model exists"
    },
    {
      "category": "Models",
      "description": "\u2705 Video.to_dict() method exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig dataclass exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig.min_duration_seconds exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig.max_duration_seconds exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig.keyword_filter exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig.keyword_mode exists"
    },
    {
      "category": "SyncConfig",
      "description": "\u2705 SyncConfig.max_videos exists"
    }
  ]
}